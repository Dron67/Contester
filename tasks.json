{"_id":{"$oid":"638715a3a4e2d3039df15aa9"},"name":"rgs","condition":"Даны координаты двух полей шахматной доски.\nКоординаты клетки - это два числа от 1 до 8:\nномер столбца и номер строки. Одного ли цвета\nэти клетки на шахматной доске?\u003cbr /\u003e\n\u003cbr /\u003e\n\u003cb\u003eВвод\u003c/b\u003e\u003cbr /\u003e\nВ первой строке заданы:\nстолбец первого поля, затем строка первого поля, затем\nстолбец второго поля, затем строка второго поля.\u003cbr /\u003e\n\u003cb\u003eВывод\u003c/b\u003e\u003cbr /\u003e\nВывести сообщение YES, если они одного цвета, и NO - иначе.\u003cbr /\u003e\n\u003cbr /\u003e\n\u003ctable class=\"xtable\" cellspacing=\"0\" border=\"0\"\u003e\u003ctr\u003e\n\u003ctd class=\"xtd\"\u003e\n\u003cb\u003eВвод 1\u003c/b\u003e\n\u003c/td\u003e\n\u003ctd class=\"xtd\"\u003e\n\u003cb\u003eВвод 2\u003c/b\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\n\u003ctd class=\"xtdcode\"\u003e\n1 1 2 2\u003cbr /\u003e\n\u003c/td\u003e\n\u003ctd class=\"xtdcode\"\u003e\n1 1 1 4\u003cbr /\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\n\u003ctd class=\"xtd\"\u003e\n\u003cb\u003eВывод 1\u003c/b\u003e\n\u003c/td\u003e\n\u003ctd class=\"xtd\"\u003e\n\u003cb\u003eВывод 2\u003c/b\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\n\u003ctd class=\"xtdcode\"\u003e\nYES\u003cbr /\u003e\n\u003c/td\u003e\n\u003ctd class=\"xtdcode\"\u003e\nNO\u003cbr /\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003cbr /\u003e\n","competition":{"$oid":"63870f88755be4019f7eef5e"},"limitTime":0,"limitMemory":0,"__v":0}
{"_id":{"$oid":"638b0f7e15f47e6254d52899"},"name":"123","condition":"123 \u003cbr\u003e\nergr\nrtgtr\n\n","competition":{"$oid":"63870f88755be4019f7eef5e"},"limitTime":1000,"limitMemory":65000,"__v":0,"checker":"#include \u003ciostream\u003e\n#include \u003cfstream\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\nint main(){\n  string a,b;\n  ifstream patterntxt(\"pattern.txt\");\n  patterntxt\u003e\u003ea;\n  patterntxt.close();\n  ifstream outputtxt(\"output.txt\");\n  outputtxt\u003e\u003eb;\n  if (a!=b){\n    cout \u003c\u003c \"NO\";\n    return 0;\n  }\n  cout \u003c\u003c \"YES\";\n  return 0;\n}","language":"c++"}
{"_id":{"$oid":"639acc3ed2f38757a87649f0"},"name":"Поедание сыра","condition":"Есть кусок сыра в виде прямоугольника размера \u003ci\u003eN\u003c/i\u003ex\u003ci\u003eM\u003c/i\u003e.\nМаленький мышонок хочет съесть весь кусок сыра. Начав в произвольной\nклетке, он, поедая очередной кусочек (1х1), переходит в соседний \n(только если он его еще не съел). Помогите маленькому мышонку \nсоставить маршрут, чтобы он съел весь сыр.\u003cbr /\u003e\n\u003cbr /\u003e\n\u003cb\u003eВвод\u003c/b\u003e\u003cbr /\u003e\nНа входе записаны числа \u003ci\u003eN\u003c/i\u003e, \u003ci\u003eM\u003c/i\u003e. (1 \u0026le; \u003ci\u003eN\u003c/i\u003e, \u003ci\u003eM\u003c/i\u003e \u0026le; 30).\u003cbr /\u003e\n\u003cb\u003eВывод\u003c/b\u003e\u003cbr /\u003e\nВывести маршрут мышонка в виде последовательности координат\nкусочков, которые он съедает. Кусочки сыра имеют координаты от\n1 до \u003ci\u003eN\u003c/i\u003e по оси X, от 1 до \u003ci\u003eM\u003c/i\u003e по оси Y.\u003cbr /\u003e\n\u003cbr /\u003e\n\u003ctable class=\"xtable\" cellspacing=\"0\" border=\"0\"\u003e\u003ctr\u003e\n\u003ctd class=\"xtd\"\u003e\n\u003cb\u003eВвод\u003c/b\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\n\u003ctd class=\"xtdcode\"\u003e\n2 2\u003cbr /\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\n\u003ctd class=\"xtd\"\u003e\n\u003cb\u003eВывод\u003c/b\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\n\u003ctd class=\"xtdcode\"\u003e\n1 1\u003cbr /\u003e\n2 1\u003cbr /\u003e\n2 2\u003cbr /\u003e\n1 2\u003cbr /\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003cbr /\u003e\n","competition":{"$oid":"63870f88755be4019f7eef5e"},"limitTime":1000,"limitMemory":65000,"checker":"#include \u003ciostream\u003e\n\n\n#include \u003cfstream\u003e\n#include \u003cvector\u003e\n\nusing namespace std;\n\nint main(){\n    int n, m, x1, y1, x, y;\n    x1 = 0, y1 = 0;\n    vector\u003cvector\u003cint\u003e\u003e a(30, vector\u003cint\u003e (30, 0));\n    ifstream inputtxt(\"input.txt\");\n    inputtxt \u003e\u003e n \u003e\u003e m;\n    ifstream outputtxt(\"output.txt\");\n    x = 0; y = 0;\n    while (outputtxt \u003e\u003e x \u003e\u003e y){\n        if ((x \u003c 1) || (x \u003e n) || (y \u003c 1) || (y \u003e m)){cout\u003c\u003c\"NO\";\n                return 0;} \n        if (abs(x1 - x) \u003e 1) {cout\u003c\u003c\"NO\";\n                return 0;}\n        if (abs(y1 - y) \u003e 1) {cout\u003c\u003c\"NO\";\n                return 0;}\n        if (a[x-1][y-1] != 0) {cout\u003c\u003c\"NO\";\n                return 0;}\n        a[x-1][y-1] = 1;\n        x1 = x;\n        y1 = y;\n    }\n    for (int i = 0; i \u003c n; i++){\n        for (int j = 0; j \u003c m; j++){\n            if (a[i][j] == 0){\n                cout\u003c\u003c\"NO\";\n                return 0;\n            }\n        }\n    }\n    cout \u003c\u003c \"YES\";\n}","language":"c++","__v":0}
{"_id":{"$oid":"63a15a0acfdc8641b148acb1"},"name":"Дейкстра","condition":"Дано число n - размер матрицы смежности, стартовая вершина s и матрица смежности n x n.\u003cbr /\u003e\n0 - отсутствие пути. Выведите минимальное расстояние от стартовой вершины до всех остальных по порядку (включая стартовую)\u003cbr /\u003e\nЕсли пути в вершину не существует, выведите -1.\n\u003cbr /\u003e\n\u003cb\u003eОграничения\u003c/b\u003e\u003cbr /\u003e\n1\u003c=n\u003c=50,  1\u003c=s\u003c=n\n\u003cbr /\u003e\n\u003ctable class=\"xtable\" cellspacing=\"0\" border=\"0\"\u003e\u003ctr\u003e\n\u003ctd class=\"xtd\"\u003e\n\u003cb\u003eВвод\u003c/b\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\n\u003ctd class=\"xtdcode\"\u003e\n5 1\u003cbr /\u003e\n0 5 9 1 0\u003cbr /\u003e\n5 0 0 0 4\u003cbr /\u003e\n9 0 0 3 7\u003cbr /\u003e\n1 0 3 0 0\u003cbr /\u003e\n0 4 7 0 0\u003cbr /\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\n\u003ctd class=\"xtd\"\u003e\n\u003cb\u003eВывод\u003c/b\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\n\u003ctd class=\"xtdcode\"\u003e\n0 5 4 1 9\u003cbr /\u003e\n\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003cbr /\u003e\n\n","competition":{"$oid":"63870f88755be4019f7eef5e"},"limitTime":10,"limitMemory":65000,"checker":"#include \u003ciostream\u003e\n#include \u003cfstream\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\nint main(){\n  string a,b;\n  ifstream patterntxt(\"pattern.txt\");\n  patterntxt\u003e\u003ea;\n  patterntxt.close();\n  ifstream outputtxt(\"output.txt\");\n  outputtxt\u003e\u003eb;\n  if (a!=b){\n    cout \u003c\u003c \"NO\";\n    return 0;\n  }\n  cout \u003c\u003c \"YES\";\n  return 0;\n}","language":"c++","__v":0}
